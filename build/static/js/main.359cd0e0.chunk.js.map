{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/RegisterForm.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatID","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","onClick","e","localStorage","removeItem","document","location","reload","LogoutOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessage","height","RegisterForm","setUsername","password","setPassword","first_name","setFirstname","last_name","setLastname","success","setSuccess","a","axios","post","secret","headers","console","log","textTransform","required","align","fontSize","paddingTop","LoginForm","error","setError","url","setUrl","authObject","get","setItem","window","paddingLeft","to","path","component","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","getElementById"],"mappings":"2OAqEeA,EA7DK,SAACC,GAAW,IAAD,EACHC,mBAAS,IADN,mBACtBC,EADsB,KACfC,EADe,KAErBC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MAEVC,EAAe,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAOP,EAAMQ,OAEfD,EAAKE,OAAS,GAAGC,YAAYP,EAAOD,EAAQ,CAAEK,SAElDN,EAAS,KAkBX,OACE,8BACE,uBAAMU,UAAU,eAAeC,SAAUR,EAAzC,UACE,uBACEO,UAAU,gBACVE,YAAY,oBACZb,MAAOA,EACPc,SAtBa,SAACT,GACpBJ,EAASI,EAAMU,OAAOf,OACtBgB,YAASlB,EAAOI,IAqBVU,SAAUR,IAEZ,uBAAOa,QAAQ,gBAAf,SACE,uBAAMN,UAAU,cAAhB,UACE,cAACO,EAAA,EAAD,CAAiBP,UAAU,iBAC3B,uBACEQ,KAAK,OACLC,UAAU,EACVC,GAAG,gBACHC,MAAO,CAAEC,QAAS,QAClBT,SA5BS,SAACT,GACpBK,YAAYP,EAAOD,EAAQ,CAAEsB,MAAOnB,EAAMU,OAAOS,MAAOjB,KAAM,aA+B1D,wBAAQY,KAAK,SAASR,UAAU,cAAhC,SACE,cAACc,EAAA,EAAD,CAAcd,UAAU,kBAE1B,wBAAQA,UAAU,SAASe,QA/Bf,SAACC,GACjBC,aAAaC,WAAW,YACxBD,aAAaC,WAAW,YACxBC,SAASC,SAASC,UA4Bd,SACE,cAACC,EAAA,EAAD,CAAgBtB,UAAU,wBCpCrBuB,EA1BG,SAAC,GAAiB,IAAD,EAAdC,EAAc,EAAdA,QACnB,OAAW,OAAPA,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsB3B,QAAS,EAE/B,qBACE4B,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJ5B,UAAU,gBACVW,MAAO,CAAEkB,MAAO,WAKpB,qBACE7B,UAAU,UACVW,MAAO,CACLkB,MAAO,QACPC,YAAa,OACbC,MAAO,QACPC,gBAAiB,WANrB,SASGR,EAAQ5B,QCaAqC,EAlCM,SAAC,GAA8B,IAAD,IAA3BC,EAA2B,EAA3BA,YAAaV,EAAc,EAAdA,QAC7BW,GACHD,GAAeA,EAAYE,OAAOC,WAAab,EAAQY,OAAOC,SACjE,OACE,sBAAKrC,UAAU,cAAf,UACGmC,GACC,qBACEnC,UAAU,iBACVW,MAAO,CAAE2B,gBAAgB,OAAD,cAASd,QAAT,IAASA,GAAT,UAASA,EAASY,cAAlB,aAAS,EAAiBG,OAA1B,SAGpB,OAAPf,QAAO,IAAPA,GAAA,UAAAA,EAASC,mBAAT,eAAsB3B,QAAS,EAC9B,qBACE4B,IAAKF,EAAQC,YAAY,GAAGE,KAC5BC,IAAI,qBACJ5B,UAAU,gBACVW,MAAO,CAAE6B,WAAYL,EAAuB,MAAQ,UAGtD,qBACEnC,UAAU,UACVW,MAAO,CACLkB,MAAO,OACPG,gBAAiB,UACjBQ,WAAYL,EAAuB,MAAQ,QAL/C,SAQGX,EAAQ5B,WCmDJ6C,EA1EE,SAACtD,GAAW,IACnBuD,EAA0CvD,EAA1CuD,MAAOC,EAAmCxD,EAAnCwD,WAAYC,EAAuBzD,EAAvByD,SAAUC,EAAa1D,EAAb0D,SAE/BC,EAAOJ,GAASA,EAAMC,GAEtBI,EAAqB,SAACvB,EAASwB,GACnC,OAAOF,EAAKG,OAAOC,KACjB,SAACC,EAAQC,GAAT,aACED,EAAOE,YAAc7B,EAAQd,IAC3B,qBAEEV,UAAU,eACVW,MAAO,CACLkB,MAAOmB,EAAc,QAAU,OAC/BV,gBAAgB,OAAD,cAASa,QAAT,IAASA,GAAT,UAASA,EAAQA,cAAjB,aAAS,EAAgBZ,OAAzB,OALnB,eACea,QA6CvB,OAAKN,EAGH,sBAAK9C,UAAU,YAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,gBAA6B8C,QAA7B,IAA6BA,OAA7B,EAA6BA,EAAMQ,QACnC,qBAAKtD,UAAU,gBAAf,SACG8C,EAAKG,OAAOC,KAAI,SAACC,GAAD,gBAAeA,EAAOA,OAAOd,kBAzChC,WACpB,IAAMkB,EAAOC,OAAOD,KAAKV,GAEzB,OAAOU,EAAKL,KAAI,SAACO,EAAKL,GACpB,IAAM5B,EAAUqB,EAASY,GACnBC,EAA2B,IAAVN,EAAc,KAAOG,EAAKH,EAAQ,GACnDJ,EAAcJ,IAAapB,EAAQY,OAAOC,SAEhD,OACE,sBAA0B1B,MAAO,CAAEgD,MAAM,QAAzC,UACE,qBAAK3D,UAAU,gBAAf,SACGgD,EACC,cAAC,EAAD,CAAWxB,QAASA,IAEpB,cAAC,EAAD,CACEA,QAASA,EACTU,YAAaW,EAASa,OAI5B,qBACE1D,UAAU,gBACVW,MAAO,CACLmB,YAAakB,EAAc,OAAS,MACpCR,WAAYQ,EAAc,MAAQ,SAJtC,SAOGD,EAAmBvB,EAASwB,OAlBjC,cAAiBI,OAmClBQ,GACD,qBAAKjD,MAAO,CAAEkD,OAAQ,WACtB,qBAAK7D,UAAU,yBAAf,SACE,cAAC,EAAD,2BAAiBb,GAAjB,IAAwBI,OAAQoD,UAbpB,c,yCCgDLmB,EAxGM,WAAO,IAAD,EACO1E,mBAAS,IADhB,mBAClBiD,EADkB,KACR0B,EADQ,OAEO3E,mBAAS,IAFhB,mBAElB4E,EAFkB,KAERC,EAFQ,OAGU7E,mBAAS,IAHnB,mBAGlB8E,EAHkB,KAGNC,EAHM,OAIQ/E,mBAAS,IAJjB,mBAIlBgF,EAJkB,KAIPC,EAJO,OAKKjF,mBAAS,IALd,mBAKlBkF,EALkB,KAKTC,EALS,KAOnB9E,EAAY,uCAAG,WAAOuB,GAAP,SAAAwD,EAAA,6DACnBxD,EAAErB,iBADiB,kBAIX8E,IAAMC,KACV,mCACA,CACErC,SAAUA,EACVsC,OAAQX,EACRE,WAAYA,EACZE,UAAWA,GAEb,CAAEQ,QAAS,CAAE,cAAe,0CAZb,uBAcXH,IAAMC,KACV,+CACA,CAAErC,SAAUA,GACZ,CACEuC,QAAS,CACP,aAAc,uCACd,YAAa,eACb,cAAe,YArBJ,OA0BjBL,EAAW,oDACXN,EAAY,IACZE,EAAa,IACbJ,EAAY,IACZM,EAAY,IA9BK,kDAgCjBQ,QAAQC,IAAR,MAhCiB,0DAAH,sDAoClB,OACE,qBAAK9E,UAAU,UAAf,SACE,sBAAKA,UAAU,OAAf,UACE,oBAAIW,MAAO,CAAEoE,cAAe,aAAe/E,UAAU,QAArD,sBAGA,uBAAMC,SAAUR,EAAhB,UACE,uBACEe,KAAK,OACLnB,MAAOgD,EACPlC,SAAU,SAACa,GAAD,OAAO+C,EAAY/C,EAAEZ,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZ8E,UAAQ,IAEV,uBACExE,KAAK,WACLnB,MAAO2E,EACP7D,SAAU,SAACa,GAAD,OAAOiD,EAAYjD,EAAEZ,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZ8E,UAAQ,IAEV,uBACExE,KAAK,OACLnB,MAAO6E,EACP/D,SAAU,SAACa,GAAD,OAAOmD,EAAanD,EAAEZ,OAAOf,QACvCW,UAAU,QACVE,YAAY,aACZ8E,UAAQ,IAEV,uBACExE,KAAK,OACLnB,MAAO+E,EACPjE,SAAU,SAACa,GAAD,OAAOqD,EAAYrD,EAAEZ,OAAOf,QACtCW,UAAU,QACVE,YAAY,YACZ8E,UAAQ,IAEV,qBAAKC,MAAM,SAAX,SACE,wBAAQzE,KAAK,SAASR,UAAU,SAAhC,SACE,gDAGJ,oBACEW,MAAO,CACLoE,cAAe,YACfG,SAAU,OACVnD,MAAO,UACPoD,WAAY,QAEdnF,UAAU,QAPZ,SASGsE,a,eCJEc,EA1FG,WAAO,IAAD,EACUhG,mBAAS,IADnB,mBACfiD,EADe,KACL0B,EADK,OAEU3E,mBAAS,IAFnB,mBAEf4E,EAFe,KAELC,EAFK,OAGI7E,mBAAS,IAHb,mBAGfiG,EAHe,KAGRC,EAHQ,OAIAlG,mBAAS,aAJT,mBAIfmG,EAJe,KAIVC,EAJU,KAchB/F,EAAY,uCAAG,WAAOuB,GAAP,eAAAwD,EAAA,6DACnBxD,EAAErB,iBAEI8F,EAAa,CACjB,aAAc,uCACd,YAAapD,EACb,cAAe2B,GANE,kBAUXS,IAAMiB,IAAI,kCAAmC,CACjDd,QAASa,IAXM,OAcjBxE,aAAa0E,QAAQ,WAAYtD,GACjCpB,aAAa0E,QAAQ,WAAY3B,GAEjC4B,OAAOxE,SAASC,SAjBC,kDAmBjBiE,EAAS,gCAnBQ,0DAAH,sDAuBlB,OACE,qBAAKtF,UAAU,UAAUW,MAAO,CAAEkF,YAAa,SAA/C,SACE,eAAC,IAAD,WACE,sBAAK7F,UAAU,OAAf,UACE,oBAAIW,MAAO,CAAEoE,cAAe,aAAe/E,UAAU,QAArD,oBAGA,uBAAMC,SAAUR,EAAhB,UACE,uBACEe,KAAK,OACLnB,MAAOgD,EACPlC,SAAU,SAACa,GAAD,OAAO+C,EAAY/C,EAAEZ,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZ8E,UAAQ,IAEV,uBACExE,KAAK,WACLnB,MAAO2E,EACP7D,SAAU,SAACa,GAAD,OAAOiD,EAAYjD,EAAEZ,OAAOf,QACtCW,UAAU,QACVE,YAAY,WACZ8E,UAAQ,IAEV,qBAAKC,MAAM,SAAX,SACE,wBAAQzE,KAAK,SAASR,UAAU,SAAhC,SACE,yDAIN,oBACEW,MAAO,CACLoE,cAAe,YACfG,SAAU,OACVnD,MAAO,UACPoD,WAAY,QAEdnF,UAAU,QAPZ,SASGqF,OAGL,cAAC,IAAD,CAAMS,GAAIP,EAAV,SACE,wBAAQvF,UAAU,SAASe,QA1EjB,WAEdyE,EADU,MAARD,EACK,YAEA,MAsEH,SACE,gDAGJ,cAAC,IAAD,CAAOQ,KAAK,YAAYC,UAAWlC,U,OCjE5BmC,MAnBf,WAKE,OAAKhF,aAAaiF,QAAQ,YAKxB,cAAC,IAAD,CACErC,OAAO,QACPsC,UAAU,uCACVvD,SAAU3B,aAAaiF,QAAQ,YAC/BE,WAAYnF,aAAaiF,QAAQ,YACjCG,eAAgB,SAACC,GAAD,OAAkB,cAAC,EAAD,eAAcA,OAT3C,cAAC,EAAD,KCNXC,IAASC,OAAO,cAAC,EAAD,IAASrF,SAASsF,eAAe,W","file":"static/js/main.359cd0e0.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport { sendMessage, isTyping } from \"react-chat-engine\";\r\nimport {\r\n  SendOutlined,\r\n  PictureOutlined,\r\n  LogoutOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nconst MessageForm = (props) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const { chatID, creds } = props;\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    const text = value.trim();\r\n\r\n    if (text.length > 0) sendMessage(creds, chatID, { text });\r\n\r\n    setValue(\"\");\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setValue(event.target.value);\r\n    isTyping(props, chatID);\r\n  };\r\n\r\n  const handleUpload = (event) => {\r\n    sendMessage(creds, chatID, { files: event.target.files, text: \"\" });\r\n  };\r\n\r\n  const handleOut = (e) => {\r\n    localStorage.removeItem(\"username\");\r\n    localStorage.removeItem(\"password\");\r\n    document.location.reload();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"message-form\" onSubmit={handleSubmit}>\r\n        <input\r\n          className=\"message-input\"\r\n          placeholder=\"Send a message...\"\r\n          value={value}\r\n          onChange={handleChange}\r\n          onSubmit={handleSubmit}\r\n        />\r\n        <label htmlFor=\"upload-button\">\r\n          <span className=\"send-button\">\r\n            <PictureOutlined className=\"picture-icon\" />\r\n            <input\r\n              type=\"file\"\r\n              multiple={false}\r\n              id=\"upload-button\"\r\n              style={{ display: \"none\" }}\r\n              onChange={handleUpload}\r\n            />\r\n          </span>\r\n        </label>\r\n        <button type=\"submit\" className=\"send-button\">\r\n          <SendOutlined className=\"send-button\" />\r\n        </button>\r\n        <button className=\"logout\" onClick={handleOut}>\r\n          <LogoutOutlined className=\"send-button\" />\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageForm;\r\n","const MyMessage = ({ message }) => {\r\n  if (message?.attachments?.length > 0) {\r\n    return (\r\n      <img\r\n        src={message.attachments[0].file}\r\n        alt=\"MESSAGE-ATTACHMENT\"\r\n        className=\"message-image\"\r\n        style={{ float: \"right\" }}\r\n      />\r\n    );\r\n  }\r\n  return (\r\n    <div\r\n      className=\"message\"\r\n      style={{\r\n        float: \"right\",\r\n        marginRight: \"18px\",\r\n        color: \"white\",\r\n        backgroundColor: \"#3B2A50\",\r\n      }}\r\n    >\r\n      {message.text}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMessage;\r\n","const TheirMessage = ({ lastMessage, message }) => {\r\n  const isFirstMessageByUser =\r\n    !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  return (\r\n    <div className=\"message-row\">\r\n      {isFirstMessageByUser && (\r\n        <div\r\n          className=\"message-avatar\"\r\n          style={{ backgroundImage: `url(${message?.sender?.avatar})` }}\r\n        />\r\n      )}\r\n      {message?.attachments?.length > 0 ? (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"MESSAGE-ATTACHMENT\"\r\n          className=\"message-image\"\r\n          style={{ marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\" }}\r\n        />\r\n      ) : (\r\n        <div\r\n          className=\"message\"\r\n          style={{\r\n            float: \"left\",\r\n            backgroundColor: \"#CABCDC\",\r\n            marginLeft: isFirstMessageByUser ? \"4px\" : \"48px\",\r\n          }}\r\n        >\r\n          {message.text}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheirMessage;\r\n","import MessageForm from \"./MessageForm\";\r\nimport MyMessage from \"./MyMessage\";\r\nimport TheirMessage from \"./TheirMessage\";\r\n\r\nconst ChatFeed = (props) => {\r\n  const { chats, activeChat, userName, messages } = props;\r\n\r\n  const chat = chats && chats[activeChat];\r\n\r\n  const renderReadReceipts = (message, isMyMessage) => {\r\n    return chat.people.map(\r\n      (person, index) =>\r\n        person.last_read === message.id && (\r\n          <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n              float: isMyMessage ? \"right\" : \"left\",\r\n              backgroundImage: `url(${person?.person?.avatar})`,\r\n            }}\r\n          />\r\n        )\r\n    );\r\n  };\r\n\r\n  const renderMessage = () => {\r\n    const keys = Object.keys(messages);\r\n\r\n    return keys.map((key, index) => {\r\n      const message = messages[key];\r\n      const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n      const isMyMessage = userName === message.sender.username;\r\n\r\n      return (\r\n        <div key={`msg_${index}`} style={{ width: `100%` }}>\r\n          <div className=\"message-block\">\r\n            {isMyMessage ? (\r\n              <MyMessage message={message} />\r\n            ) : (\r\n              <TheirMessage\r\n                message={message}\r\n                lastMessage={messages[lastMessageKey]}\r\n              />\r\n            )}\r\n          </div>\r\n          <div\r\n            className=\"read-reciepts\"\r\n            style={{\r\n              marginRight: isMyMessage ? \"18px\" : \"0px\",\r\n              marginLeft: isMyMessage ? \"0px\" : \"68px \",\r\n            }}\r\n          >\r\n            {renderReadReceipts(message, isMyMessage)}\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (!chat) return \"Loading...\";\r\n\r\n  return (\r\n    <div className=\"chat-feed\">\r\n      <div className=\"chat-title-container\">\r\n        <div className=\"chat-title\">{chat?.title}</div>\r\n        <div className=\"chat-subtitle\">\r\n          {chat.people.map((person) => `${person.person.username}`)}\r\n        </div>\r\n      </div>\r\n      {renderMessage()}\r\n      <div style={{ height: \"100px\" }} />\r\n      <div className=\"message-form-container\">\r\n        <MessageForm {...props} chatID={activeChat} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatFeed;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst RegisterForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [first_name, setFirstname] = useState(\"\");\r\n  const [last_name, setLastname] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      await axios.post(\r\n        \"https://api.chatengine.io/users/\",\r\n        {\r\n          username: username,\r\n          secret: password,\r\n          first_name: first_name,\r\n          last_name: last_name,\r\n        },\r\n        { headers: { \"PRIVATE-KEY\": \"36038e03-6686-4394-98c6-c58b0136eb88\" } }\r\n      );\r\n      await axios.post(\r\n        \"https://api.chatengine.io/chats/5471/people/\",\r\n        { username: username },\r\n        {\r\n          headers: {\r\n            \"Project-ID\": \"b9623237-4ac1-48fc-b999-d0dc80b802c4\",\r\n            \"User-Name\": \"jameskidd312\",\r\n            \"User-Secret\": \"123123\",\r\n          },\r\n        }\r\n      );\r\n\r\n      setSuccess(\"Please enter your information on Log In section!\");\r\n      setPassword(\"\");\r\n      setFirstname(\"\");\r\n      setUsername(\"\");\r\n      setLastname(\"\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form\">\r\n        <h1 style={{ textTransform: \"uppercase\" }} className=\"title\">\r\n          Register\r\n        </h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Username\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Password\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={first_name}\r\n            onChange={(e) => setFirstname(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"First Name\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={last_name}\r\n            onChange={(e) => setLastname(e.target.value)}\r\n            className=\"input\"\r\n            placeholder=\"Last Name\"\r\n            required\r\n          />\r\n          <div align=\"center\">\r\n            <button type=\"submit\" className=\"button\">\r\n              <span>Register</span>\r\n            </button>\r\n          </div>\r\n          <h1\r\n            style={{\r\n              textTransform: \"uppercase\",\r\n              fontSize: \"25px\",\r\n              color: \"#D6FF79\",\r\n              paddingTop: \"25px\",\r\n            }}\r\n            className=\"title\"\r\n          >\r\n            {success}\r\n          </h1>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport RegisterForm from \"./RegisterForm\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [url, setUrl] = useState(\"/register\");\r\n\r\n  const changeURL = () => {\r\n    if (url === \"/\") {\r\n      setUrl(\"/register\");\r\n    } else {\r\n      setUrl(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const authObject = {\r\n      \"Project-ID\": \"b9623237-4ac1-48fc-b999-d0dc80b802c4\",\r\n      \"User-Name\": username,\r\n      \"User-Secret\": password,\r\n    };\r\n\r\n    try {\r\n      await axios.get(\"https://api.chatengine.io/chats\", {\r\n        headers: authObject,\r\n      });\r\n\r\n      localStorage.setItem(\"username\", username);\r\n      localStorage.setItem(\"password\", password);\r\n\r\n      window.location.reload();\r\n    } catch (error) {\r\n      setError(\"Oops, incorrect credentials!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\" style={{ paddingLeft: \"250px\" }}>\r\n      <Router>\r\n        <div className=\"form\">\r\n          <h1 style={{ textTransform: \"uppercase\" }} className=\"title\">\r\n            Log In\r\n          </h1>\r\n          <form onSubmit={handleSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              className=\"input\"\r\n              placeholder=\"Username\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              className=\"input\"\r\n              placeholder=\"Password\"\r\n              required\r\n            />\r\n            <div align=\"center\">\r\n              <button type=\"submit\" className=\"button\">\r\n                <span>Start chatting</span>\r\n              </button>\r\n            </div>\r\n          </form>\r\n          <h1\r\n            style={{\r\n              textTransform: \"uppercase\",\r\n              fontSize: \"35px\",\r\n              color: \"#BEBBBB\",\r\n              paddingTop: \"60px\",\r\n            }}\r\n            className=\"title\"\r\n          >\r\n            {error}\r\n          </h1>\r\n        </div>\r\n        <Link to={url}>\r\n          <button className=\"button\" onClick={changeURL}>\r\n            <span>Register</span>\r\n          </button>\r\n        </Link>\r\n        <Route path=\"/register\" component={RegisterForm} />\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import { ChatEngine } from \"react-chat-engine\";\r\nimport ChatFeed from \"./components/ChatFeed\";\r\nimport LoginForm from \"./components/LoginForm\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  // if (!localStorage.getItem(\"username\")) {\r\n  //   return <RegisterForm />;\r\n  // }\r\n\r\n  if (!localStorage.getItem(\"username\")) {\r\n    return <LoginForm />;\r\n  }\r\n\r\n  return (\r\n    <ChatEngine\r\n      height=\"100vh\"\r\n      projectID=\"b9623237-4ac1-48fc-b999-d0dc80b802c4\"\r\n      userName={localStorage.getItem(\"username\")}\r\n      userSecret={localStorage.getItem(\"password\")}\r\n      renderChatFeed={(chatAppProps) => <ChatFeed {...chatAppProps} />}\r\n    />\r\n  );\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}